name: Deploy Dist folder
on: [push]
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v5
        # run: |
        #   echo "Cloning the repository"
        #   echo "${{toJson(github)}}"
        #   git clone https://github.com/${{github.repository}}.git myrepo
        #   cd myrepo && ls
      - name: setup node js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run tests
        run: npm test -- --watchAll=false
      - name: Complete job
        run: echo "All steps completed successfully"
  Build:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Get code
        uses: actions/checkout@v5
      - name: setup node js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Build the app
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: build
  deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-folder
          path: build
      - name: Deploy to server
        run: |
          echo "deploy below path"
          ls build
          echo "Deploying to server..."
